@page "/regions"
@using Microsoft.EntityFrameworkCore
@using Pok
@using webc.Data

<h1>Pokémon Regions</h1>


<div class="region-grid">
    @if (Regions == null)
    {
            <p><em>Loading...</em></p>
    }
    else
    {
        @foreach (var region in Regions)
        {
                    <div class="region-card">
                        <h3>@region.RegionName</h3>
                        <p>Number of Pokémons: @region.Number_of_pokemons</p>
                        <p>Region Type: @region.Region_type</p>
                        <div class="action-buttons">
                            <a class="btn edit" href="@($"regions/edit?regionid={region.RegionId}")">Edit</a>
                            <a class="btn details" href="@($"regions/details?regionid={region.RegionId}")">Details</a>
                        </div>
                    </div>
        }
    }
</div>

@code {
    private List<Region> Regions { get; set; } = new();

    [Inject]
    private IDbContextFactory<webcContext> DbFactory { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        await using var context = DbFactory.CreateDbContext();

        Regions = await context.Region.Select(r => new Region
            {
                RegionId = r.RegionId,
                RegionName = r.RegionName,
                Region_type = r.Region_type,
                Number_of_pokemons = context.Pokemon.Count(p => p.RegionId == r.RegionId)
            }).ToListAsync();
    }
}

<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f9f9f9;
        color: #333;
        margin: 0;
        padding: 0;
    }

    h1 {
        text-align: center;
        color: #000000;
        margin-top: 20px;
    }

    .region-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 1.5rem;
        padding: 2rem;
    }

    .region-card {
        background: linear-gradient(145deg, #ffffff, #e6e6e6);
        box-shadow: 5px 5px 15px #d1d1d1, -5px -5px 15px #ffffff;
        border-radius: 15px;
        padding: 1.5rem;
        text-align: center;
        transition: transform 0.3s, box-shadow 0.3s;
    }

    .region-card:hover {
        transform: scale(1.05);
        box-shadow: 8px 8px 20px #c0c0c0, -8px -8px 20px #ffffff;
    }

    .region-card h3 {
        color: #ff5722;
        margin-bottom: 10px;
    }

    .region-card p {
        margin: 5px 0;
        color: #555;
    }

    .action-buttons {
        margin-top: 15px;
    }

    .btn {
        display: inline-block;
        margin: 5px;
        padding: 8px 12px;
        border-radius: 5px;
        text-decoration: none;
        color: #fff;
        font-weight: bold;
        transition: background-color 0.3s, transform 0.2s;
    }

    .btn.edit {
        background-color: #007bff;
    }

    .btn.edit:hover {
        background-color: #0056b3;
        transform: translateY(-2px);
    }

    .btn.details {
        background-color: #28a745;
    }

    .btn.details:hover {
        background-color: #1e7e34;
        transform: translateY(-2px);
    }
</style>
