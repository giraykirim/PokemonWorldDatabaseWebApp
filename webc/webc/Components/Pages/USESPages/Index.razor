@page "/uses"
@using Microsoft.EntityFrameworkCore
@using Pok
@using webc.Data
@implements IAsyncDisposable
@inject IDbContextFactory<webc.Data.webcContext> DbFactory

<h1>Move Combinations</h1>

<div class="align-right">
    <a class="use-card" href="uses/create">Create New</a>
</div>

<div class="use-grid">
    @if (context.USES == null)
    {
            <p><em>Loading...</em></p>
    }
    else
    {
        @foreach (var uses in context.USES)
        {
                    <div class="use-card">
                        <h3>Trainer: @uses.Trainer.Trainer_name</h3>
                        <p>Move: @uses.Move.Move_name</p>
                        <p>Pokémon: @uses.Pokemon.Pokemon_name</p>
                        <div class="action-buttons">
                            <a class="btn edit" href="@($"uses/edit?id={uses.Id}")">Edit</a>
                            <a class="btn details" href="@($"uses/details?id={uses.Id}")">Details</a>
                            <a class="btn delete" href="@($"uses/delete?id={uses.Id}")">Delete</a>
                        </div>
                    </div>
        }
    }
</div>

@code {
    private webcContext context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
        context.Trainer.ToList();
        context.Pokemon.ToList();
        context.Move.ToList();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}

<PageTitle>Move Combinations - Pokémon World</PageTitle>

<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f9f9f9;
        color: #333;
        margin: 0;
        padding: 0;
    }

    h1 {
        text-align: center;
        color: #000000;
        margin-top: 20px;
    }

    .use-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 1.5rem;
        padding: 2rem;
    }

      .align-right {
    text-align: right;
    margin-bottom: 20px;
}


    .use-card {
        background: linear-gradient(145deg, #ffffff, #e6e6e6);
        box-shadow: 5px 5px 15px #d1d1d1, -5px -5px 15px #ffffff;
        border-radius: 15px;
        padding: 1.5rem;
        text-align: center;
        transition: transform 0.3s, box-shadow 0.3s;
    }

    .use-card:hover {
        transform: scale(1.05);
        box-shadow: 8px 8px 20px #c0c0c0, -8px -8px 20px #ffffff;
    }

    .use-card h3 {
        color: #ff5722;
        margin-bottom: 10px;
    }

    .use-card p {
        margin: 5px 0;
        color: #555;
    }

    .action-buttons {
        margin-top: 15px;
    }

    .btn {
        display: inline-block;
        margin: 5px;
        padding: 8px 12px;
        border-radius: 5px;
        text-decoration: none;
        color: #fff;
        font-weight: bold;
        transition: background-color 0.3s, transform 0.2s;
    }

    .btn.edit {
        background-color: #007bff;
    }

    .btn.edit:hover {
        background-color: #0056b3;
        transform: translateY(-2px);
    }

    .btn.details {
        background-color: #28a745;
    }

    .btn.details:hover {
        background-color: #1e7e34;
        transform: translateY(-2px);
    }

    .btn.delete {
        background-color: #dc3545;
    }

    .btn.delete:hover {
        background-color: #a71d2a;
        transform: translateY(-2px);
    }
</style>
